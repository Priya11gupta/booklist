{"version":3,"sources":["component/useEffectAPI.js","component/Details.js","App.js","reportWebVitals.js","index.js"],"names":["UseEffectAPI","useState","users","setUsers","fetched","setfetched","getUsers","a","fetch","response","json","data","console","log","useEffect","className","items","map","curElem","src","volumeInfo","imageLinks","smallThumbnail","alt","width","to","exact","title","id","Details","useParams","thumbnail","subtitle","publishedDate","description","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAmDeA,EAhDM,WAEjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,uCAAG,8BAAAC,EAAA,6DACbF,GAAW,GADE,SAEUG,MAAM,sEAFhB,cAEPC,EAFO,gBAGMA,EAASC,OAHf,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,GACZR,EAASQ,GACTN,GAAW,GANE,4CAAH,qDAad,OAJAS,qBAAU,WACNR,MACD,IAEI,gCACC,+CACA,qBAAKS,UAAU,uBAAf,SACI,qBAAKA,UAAU,kBAAf,SAEIX,GAEAF,EAAMc,MAAMC,KAAI,SAACC,GACb,OAAO,mCACP,qBAAKH,UAAU,uBAAf,SACQ,qBAAKA,UAAU,WAAf,SACQ,sBAAKA,UAAU,4BAAf,UACQ,sBAAKA,UAAU,QAAf,cAAwB,qBAAKI,IAAMD,EAAQE,WAAWC,WAAWC,eAAiBC,IAAI,YAAYR,UAAU,UAAUS,MAAM,QAA5H,OACJ,qBAAKT,UAAU,aAAf,SACA,eAAC,IAAD,CAAMU,GAAG,WAAWC,OAAK,EAAzB,cAA2B,qBAAIX,UAAU,qBAAd,UAAoCG,EAAQE,WAAWO,MAAvD,kBALJT,EAAQU,iBCsB5DC,EAjDC,WACLC,cAAYF,GAAvB,IAEA,EAA0B3B,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,uCAAG,8BAAAC,EAAA,6DACbF,GAAW,GADE,SAEUG,MAAM,sEAFhB,cAEPC,EAFO,gBAGMA,EAASC,OAHf,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,GACZR,EAASQ,GACTN,GAAW,GANE,4CAAH,qDAad,OAJAS,qBAAU,WACNR,MACD,IAEI,gCACL,6CACM,qBAAKS,UAAU,uBAAf,SACI,qBAAKA,UAAU,kBAAf,SACEX,GACAF,EAAMc,MAAMC,KAAI,SAACC,GAEX,OAAO,mCACP,qBAAKH,UAAU,uBAAf,SACQ,qBAAKA,UAAU,WAAf,SACQ,sBAAKA,UAAU,4BAAf,UACQ,sBAAKA,UAAU,QAAf,cAAwB,qBAAKI,IAAMD,EAAQE,WAAWC,WAAWU,UAAYR,IAAI,YAAYR,UAAU,UAAUS,MAAM,QAAvH,OACJ,sBAAKT,UAAU,aAAf,UACQ,oBAAIA,UAAU,qBAAd,SAAoCG,EAAQE,WAAWY,WACvD,oBAAIjB,UAAU,qBAAd,SAAoCG,EAAQE,WAAWa,gBACvD,oBAAIlB,UAAU,qBAAd,SAAoCG,EAAQE,WAAWc,uBAPxChB,EAAQU,iBCNxDO,EAhBH,WAEV,OAAO,cAAC,IAAD,UACP,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIV,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOU,KAAK,WAAWV,OAAK,EAA5B,SACE,cAAC,EAAD,cCLOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,UACA,cAAC,EAAD,QAGAC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83a34cfa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UseEffectAPI = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [fetched, setfetched] = useState();\r\n\r\n    const getUsers = async () => {\r\n        setfetched(false);   \r\n        const response = await fetch('https://www.googleapis.com/books/v1/volumes?filter=free-ebooks&q=a');\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setUsers(data);\r\n        setfetched(true);    \r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    return <div>\r\n            <h2>List of BOOKS</h2>\r\n            <div className=\"container-fluid mt-5\">\r\n                <div className=\"row text-center\">\r\n                { \r\n                    fetched &&\r\n\r\n                    users.items.map((curElem) => {                       \r\n                        return <>\r\n                        <div className=\"col-10 col-md-4 mt-5\" key={curElem.id}>\r\n                                <div className=\"card p-2\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                                <div className=\"image\"> <img src={ curElem.volumeInfo.imageLinks.smallThumbnail } alt='thumbnail' className=\"rounded\" width=\"155\" /> </div>\r\n                                            <div className=\"ml-3 w-100\">\r\n                                            <Link to='/details' exact> <h4 className=\"mb-0 mt-0 textLeft\">{curElem.volumeInfo.title} </h4></Link>\r\n                                        \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </>\r\n                       })\r\n                }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default UseEffectAPI","import React,{useEffect,useState} from 'react'\r\nimport { useParams } from 'react-router';\r\n\r\nconst Details = () => {\r\nconst id = useParams().id;\r\n\r\nconst [users, setUsers] = useState([]);\r\nconst [fetched, setfetched] = useState();\r\n\r\nconst getUsers = async () => {\r\n    setfetched(false);   \r\n    const response = await fetch('https://www.googleapis.com/books/v1/volumes?filter=free-ebooks&q=a');\r\n    const data = await response.json();\r\n    console.log(data);\r\n    setUsers(data);\r\n    setfetched(true);    \r\n}\r\n\r\nuseEffect(() => {\r\n    getUsers();\r\n}, []);\r\n\r\nreturn <div>\r\n  <h3>Description</h3>\r\n        <div className=\"container-fluid mt-5\">\r\n            <div className=\"row text-center\">\r\n            { fetched &&\r\n              users.items.map((curElem) => {                   \r\n\r\n                    return <>\r\n                    <div className=\"col-10 col-md-4 mt-5\" key={curElem.id}>\r\n                            <div className=\"card p-2\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"image\"> <img src={ curElem.volumeInfo.imageLinks.thumbnail } alt='thumbnail' className=\"rounded\" width=\"155\" /> </div>\r\n                                        <div className=\"ml-3 w-100\">\r\n                                                <h4 className=\"mb-0 mt-0 textLeft\">{curElem.volumeInfo.subtitle}</h4>  \r\n                                                <h4 className=\"mb-0 mt-0 textLeft\">{curElem.volumeInfo.publishedDate}</h4> \r\n                                                <h4 className=\"mb-0 mt-0 textLeft\">{curElem.volumeInfo.description}</h4>                                         \r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    </>\r\n                   })\r\n            }\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Details","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route,Redirect,Switch} from 'react-router-dom';\n\nimport UseEffectAPI from \"./component/useEffectAPI\";\nimport Details from './component/Details';\n\n\nconst App = () => {\n\n  return <Router>\n  <main>\n    <Switch>\n      <Route path=\"/\" exact>\n        <UseEffectAPI/>\n      </Route>\n      <Route path=\"/details\" exact>  \n        <Details/>\n      </Route>        \n    </Switch>\n  </main>\n  </Router>\n} \n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n  <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}